"use client";

/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/95ol1eEccFG
 */
import {
	CardDescription,
	CardTitle,
	CardHeader,
	CardContent,
	Card,
} from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { ResponsiveBar } from "@nivo/bar";
import { ResponsivePie } from "@nivo/pie";
import { ResponsiveLine } from "@nivo/line";
import { ClassAttributes, HTMLAttributes, JSX, SVGProps } from "react";

export function AnalyticsPage() {
	return (
		<div className="grid gap-4 lg:grid-cols-2">
			<Card>
				<CardHeader className="flex items-center gap-4">
					<div className="flex flex-col">
						<CardDescription>Assets</CardDescription>
						<CardTitle>$2389.00</CardTitle>
					</div>
					<Button
						className="ml-auto h-8 w-8"
						size="icon"
						variant="outline"
					>
						<MoreHorizontalIcon className="h-4 w-4" />
						<span className="sr-only">Toggle options</span>
					</Button>
				</CardHeader>
				<CardContent className="flex items-center justify-center h-[200px]">
					<BarChart className="h-[200px] aspect-video" />
				</CardContent>
			</Card>
			<Card>
				<CardHeader className="flex items-center gap-4">
					<div className="flex flex-col">
						<CardDescription>Income</CardDescription>
						<CardTitle>$2389.00</CardTitle>
					</div>
					<Button
						className="ml-auto h-8 w-8"
						size="icon"
						variant="outline"
					>
						<MoreHorizontalIcon className="h-4 w-4" />
						<span className="sr-only">Toggle options</span>
					</Button>
				</CardHeader>
				<CardContent className="flex items-center justify-center h-[200px]">
					<PieChart className="h-[200px] aspect-video" />
				</CardContent>
			</Card>
			<Card>
				<CardHeader className="flex items-center gap-4">
					<div className="flex flex-col">
						<CardDescription>Expenses</CardDescription>
						<CardTitle>$2389.00</CardTitle>
					</div>
					<Button
						className="ml-auto h-8 w-8"
						size="icon"
						variant="outline"
					>
						<MoreHorizontalIcon className="h-4 w-4" />
						<span className="sr-only">Toggle options</span>
					</Button>
				</CardHeader>
				<CardContent className="flex items-center justify-center h-[200px]">
					<LineChart className="h-[200px] aspect-video" />
				</CardContent>
			</Card>
			<Card>
				<CardHeader className="flex items-center gap-4">
					<div className="flex flex-col">
						<CardDescription>Liabilities</CardDescription>
						<CardTitle>$2389.00</CardTitle>
					</div>
					<Button
						className="ml-auto h-8 w-8"
						size="icon"
						variant="outline"
					>
						<MoreHorizontalIcon className="h-4 w-4" />
						<span className="sr-only">Toggle options</span>
					</Button>
				</CardHeader>
				<CardContent className="flex items-center justify-center h-[200px]">
					<BarChart className="h-[200px] aspect-video" />
				</CardContent>
			</Card>
			<Card>
				<CardHeader className="flex items-center gap-4">
					<div className="flex flex-col">
						<CardDescription>Other Investments</CardDescription>
						<CardTitle>$2389.00</CardTitle>
					</div>
					<Button
						className="ml-auto h-8 w-8"
						size="icon"
						variant="outline"
					>
						<MoreHorizontalIcon className="h-4 w-4" />
						<span className="sr-only">Toggle options</span>
					</Button>
				</CardHeader>
				<CardContent className="flex items-center justify-center h-[200px]">
					<BarChart className="h-[200px] aspect-video" />
				</CardContent>
			</Card>
		</div>
	);
}

function MoreHorizontalIcon(
	props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>
) {
	return (
		<svg
			{...props}
			xmlns="http://www.w3.org/2000/svg"
			width="24"
			height="24"
			viewBox="0 0 24 24"
			fill="none"
			stroke="currentColor"
			strokeWidth="2"
			strokeLinecap="round"
			strokeLinejoin="round"
		>
			<circle cx="12" cy="12" r="1" />
			<circle cx="19" cy="12" r="1" />
			<circle cx="5" cy="12" r="1" />
		</svg>
	);
}

function BarChart(
	props: JSX.IntrinsicAttributes &
		ClassAttributes<HTMLDivElement> &
		HTMLAttributes<HTMLDivElement>
) {
	return (
		<div {...props}>
			<ResponsiveBar
				data={[
					{ name: "Jan", count: 111 },
					{ name: "Feb", count: 157 },
					{ name: "Mar", count: 129 },
					{ name: "Apr", count: 150 },
					{ name: "May", count: 119 },
					{ name: "Jun", count: 72 },
				]}
				keys={["count"]}
				indexBy="name"
				margin={{ top: 0, right: 0, bottom: 40, left: 40 }}
				padding={0.3}
				colors={["#2563eb"]}
				axisBottom={{
					tickSize: 0,
					tickPadding: 16,
				}}
				axisLeft={{
					tickSize: 0,
					tickValues: 4,
					tickPadding: 16,
				}}
				gridYValues={4}
				theme={{
					tooltip: {
						chip: {
							borderRadius: "9999px",
						},
						container: {
							fontSize: "12px",
							textTransform: "capitalize",
							borderRadius: "6px",
						},
					},
					grid: {
						line: {
							stroke: "#f3f4f6",
						},
					},
				}}
				tooltipLabel={({ id }) => `${id}`}
				enableLabel={false}
				role="application"
				ariaLabel="A bar chart showing data"
			/>
		</div>
	);
}

function PieChart(
	props: JSX.IntrinsicAttributes &
		ClassAttributes<HTMLDivElement> &
		HTMLAttributes<HTMLDivElement>
) {
	return (
		<div {...props}>
			<ResponsivePie
				data={[
					{ id: "Jan", value: 111 },
					{ id: "Feb", value: 157 },
					{ id: "Mar", value: 129 },
					{ id: "Apr", value: 150 },
					{ id: "May", value: 119 },
					{ id: "Jun", value: 72 },
				]}
				sortByValue
				margin={{ top: 10, right: 10, bottom: 10, left: 10 }}
				cornerRadius={0}
				padAngle={0}
				borderWidth={1}
				borderColor={"#ffffff"}
				enableArcLinkLabels={false}
				arcLabel={(d) => `${d.id}`}
				arcLabelsTextColor={"#ffffff"}
				arcLabelsRadiusOffset={0.65}
				colors={["#2563eb"]}
				theme={{
					labels: {
						text: {
							fontSize: "18px",
						},
					},
					tooltip: {
						chip: {
							borderRadius: "9999px",
						},
						container: {
							fontSize: "12px",
							textTransform: "capitalize",
							borderRadius: "6px",
						},
					},
				}}
				role="application"
			/>
		</div>
	);
}

function LineChart(
	props: JSX.IntrinsicAttributes &
		ClassAttributes<HTMLDivElement> &
		HTMLAttributes<HTMLDivElement>
) {
	return (
		<div {...props}>
			<ResponsiveLine
				data={[
					{
						id: "Desktop",
						data: [
							{ x: "Jan", y: 43 },
							{ x: "Feb", y: 137 },
							{ x: "Mar", y: 61 },
							{ x: "Apr", y: 145 },
							{ x: "May", y: 26 },
							{ x: "Jun", y: 154 },
						],
					},
					{
						id: "Mobile",
						data: [
							{ x: "Jan", y: 60 },
							{ x: "Feb", y: 48 },
							{ x: "Mar", y: 177 },
							{ x: "Apr", y: 78 },
							{ x: "May", y: 96 },
							{ x: "Jun", y: 204 },
						],
					},
				]}
				margin={{ top: 10, right: 10, bottom: 40, left: 40 }}
				xScale={{
					type: "point",
				}}
				yScale={{
					type: "linear",
				}}
				axisTop={null}
				axisRight={null}
				axisBottom={{
					tickSize: 0,
					tickPadding: 16,
				}}
				axisLeft={{
					tickSize: 0,
					tickValues: 5,
					tickPadding: 16,
				}}
				colors={["#2563eb", "#e11d48"]}
				pointSize={6}
				useMesh={true}
				gridYValues={6}
				theme={{
					tooltip: {
						chip: {
							borderRadius: "9999px",
						},
						container: {
							fontSize: "12px",
							textTransform: "capitalize",
							borderRadius: "6px",
						},
					},
					grid: {
						line: {
							stroke: "#f3f4f6",
						},
					},
				}}
				role="application"
			/>
		</div>
	);
}
